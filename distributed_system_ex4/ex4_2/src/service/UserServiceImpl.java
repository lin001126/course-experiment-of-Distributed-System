
package service;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "UserServiceImpl", targetNamespace = "http://server/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface UserServiceImpl {


    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "registry", targetNamespace = "http://server/", className = "server.Registry")
    @ResponseWrapper(localName = "registryResponse", targetNamespace = "http://server/", className = "server.RegistryResponse")
    @Action(input = "http://server/UserServiceImpl/registryRequest", output = "http://server/UserServiceImpl/registryResponse")
    public String registry(
        @WebParam(name = "arg0", targetNamespace = "")
        List<String> arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addTD", targetNamespace = "http://server/", className = "server.AddTD")
    @ResponseWrapper(localName = "addTDResponse", targetNamespace = "http://server/", className = "server.AddTDResponse")
    @Action(input = "http://server/UserServiceImpl/addTDRequest", output = "http://server/UserServiceImpl/addTDResponse")
    public String addTD(
        @WebParam(name = "arg0", targetNamespace = "")
        List<String> arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     * @throws ParseException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "queryTD", targetNamespace = "http://server/", className = "server.QueryTD")
    @ResponseWrapper(localName = "queryTDResponse", targetNamespace = "http://server/", className = "server.QueryTDResponse")
    @Action(input = "http://server/UserServiceImpl/queryTDRequest", output = "http://server/UserServiceImpl/queryTDResponse", fault = {
        @FaultAction(className = ParseException_Exception.class, value = "http://server/UserServiceImpl/queryTD/Fault/ParseException")
    })
    public String queryTD(
        @WebParam(name = "arg0", targetNamespace = "")
        List<String> arg0)
        throws ParseException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteTD", targetNamespace = "http://server/", className = "server.DeleteTD")
    @ResponseWrapper(localName = "deleteTDResponse", targetNamespace = "http://server/", className = "server.DeleteTDResponse")
    @Action(input = "http://server/UserServiceImpl/deleteTDRequest", output = "http://server/UserServiceImpl/deleteTDResponse")
    public String deleteTD(
        @WebParam(name = "arg0", targetNamespace = "")
        List<String> arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "clearTD", targetNamespace = "http://server/", className = "server.ClearTD")
    @ResponseWrapper(localName = "clearTDResponse", targetNamespace = "http://server/", className = "server.ClearTDResponse")
    @Action(input = "http://server/UserServiceImpl/clearTDRequest", output = "http://server/UserServiceImpl/clearTDResponse")
    public String clearTD(
        @WebParam(name = "arg0", targetNamespace = "")
        List<String> arg0);

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTDList", targetNamespace = "http://server/", className = "server.GetTDList")
    @ResponseWrapper(localName = "getTDListResponse", targetNamespace = "http://server/", className = "server.GetTDListResponse")
    @Action(input = "http://server/UserServiceImpl/getTDListRequest", output = "http://server/UserServiceImpl/getTDListResponse")
    public String getTDList();

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "checkId", targetNamespace = "http://server/", className = "server.CheckId")
    @ResponseWrapper(localName = "checkIdResponse", targetNamespace = "http://server/", className = "server.CheckIdResponse")
    @Action(input = "http://server/UserServiceImpl/checkIdRequest", output = "http://server/UserServiceImpl/checkIdResponse")
    public boolean checkId(
        @WebParam(name = "arg0", targetNamespace = "")
        List<String> arg0);

}
